diff --git a/geode-core/src/main/java/org/apache/geode/cache/query/internal/RestrictedMethodInvocationAuthorizer.java b/geode-core/src/main/java/org/apache/geode/cache/query/internal/RestrictedMethodInvocationAuthorizer.java
index 254c8170e3..bd28886628 100644
--- a/geode-core/src/main/java/org/apache/geode/cache/query/internal/RestrictedMethodInvocationAuthorizer.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/query/internal/RestrictedMethodInvocationAuthorizer.java
@@ -31,6 +31,8 @@ public class RestrictedMethodInvocationAuthorizer implements MethodInvocationAut
 
   public static final String UNAUTHORIZED_STRING = "Unauthorized access to method: ";
 
+  protected static final HashMap<String, Set> DEFAULT_WHITELIST = createWhiteList();
+
   private SecurityService securityService;
 
   // List of methods that can be invoked by
@@ -39,10 +41,10 @@ public class RestrictedMethodInvocationAuthorizer implements MethodInvocationAut
 
   public RestrictedMethodInvocationAuthorizer(SecurityService securityService) {
     this.securityService = securityService;
-    whiteListedMethodsToClass = createWhiteList();
+    whiteListedMethodsToClass = DEFAULT_WHITELIST;
   }
 
-  private HashMap<String, Set> createWhiteList() {
+  private static HashMap<String, Set> createWhiteList() {
     HashMap<String, Set> whiteListMap = new HashMap();
     Set<Class> objectCallers = new HashSet();
     objectCallers.add(Object.class);
@@ -122,6 +124,10 @@ public class RestrictedMethodInvocationAuthorizer implements MethodInvocationAut
     return whiteListMap;
   }
 
+  protected HashMap<String, Set> getWhiteList() {
+    return whiteListedMethodsToClass;
+  }
+
   boolean isWhitelisted(Method method) {
     String methodName = method.getName();
 