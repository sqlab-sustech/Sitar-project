diff --git a/rave-components/rave-core/src/main/java/org/apache/rave/portal/security/impl/DefaultRegionPermissionEvaluator.java b/rave-components/rave-core/src/main/java/org/apache/rave/portal/security/impl/DefaultRegionPermissionEvaluator.java
index 165aea82..0df0bc09 100644
--- a/rave-components/rave-core/src/main/java/org/apache/rave/portal/security/impl/DefaultRegionPermissionEvaluator.java
+++ b/rave-components/rave-core/src/main/java/org/apache/rave/portal/security/impl/DefaultRegionPermissionEvaluator.java
@@ -82,7 +82,7 @@ public class DefaultRegionPermissionEvaluator extends AbstractModelPermissionEva
         if (targetId instanceof RaveSecurityContext) {
             hasPermission = verifyRaveSecurityContext(authentication, (RaveSecurityContext) targetId);
         } else {
-            hasPermission = hasPermission(authentication, regionRepository.get((Long) targetId), permission, true);
+            hasPermission = hasPermission(authentication, regionRepository.get((String) targetId), permission, true);
         }
         return hasPermission;
     }
@@ -126,7 +126,7 @@ public class DefaultRegionPermissionEvaluator extends AbstractModelPermissionEva
 
     // returns a trusted Region object, either from the RegionRepository, or the
     // cached container list
-    private Region getTrustedRegion(long regionId, List<Region> trustedRegionContainer) {
+    private Region getTrustedRegion(String regionId, List<Region> trustedRegionContainer) {
         Region region = null;
         if (trustedRegionContainer.isEmpty()) {
             region = regionRepository.get(regionId);
@@ -154,7 +154,7 @@ public class DefaultRegionPermissionEvaluator extends AbstractModelPermissionEva
         return ((User)authentication.getPrincipal()).getUsername().equals(username);
     }
 
-    private boolean isRegionOwnerById(Authentication authentication, Long userId) {
+    private boolean isRegionOwnerById(Authentication authentication, String userId) {
         return ((User)authentication.getPrincipal()).getId().equals(userId);
     }
 
@@ -168,7 +168,7 @@ public class DefaultRegionPermissionEvaluator extends AbstractModelPermissionEva
 
         // perform the permissions check based on the class supplied to the RaveSecurityContext object
         if (User.class == clazz) {
-            return isRegionOwnerById(authentication, (Long) raveSecurityContext.getId());
+            return isRegionOwnerById(authentication, (String) raveSecurityContext.getId());
         } else {
             throw new IllegalArgumentException("unknown RaveSecurityContext type: " + raveSecurityContext.getType());
         }