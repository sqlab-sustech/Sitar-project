diff --git a/apache-rat-core/src/main/java/org/apache/rat/analysis/generation/GeneratedLicenseNotRequired.java b/apache-rat-core/src/main/java/org/apache/rat/analysis/generation/GeneratedLicenseNotRequired.java
index ca1b9040..cf3c46ba 100644
--- a/apache-rat-core/src/main/java/org/apache/rat/analysis/generation/GeneratedLicenseNotRequired.java
+++ b/apache-rat-core/src/main/java/org/apache/rat/analysis/generation/GeneratedLicenseNotRequired.java
@@ -20,11 +20,13 @@ package org.apache.rat.analysis.generation;
 
 import java.util.regex.Pattern;
 
-import org.apache.rat.analysis.Claims;
 import org.apache.rat.analysis.IHeaderMatcher;
 import org.apache.rat.analysis.RatHeaderAnalysisException;
+import org.apache.rat.document.IResource;
 import org.apache.rat.report.RatReportFailedException;
 import org.apache.rat.report.claim.IClaimReporter;
+import org.apache.rat.report.claim.LicenseFamilyCode;
+import org.apache.rat.report.claim.impl.LicenseHeaderClaim;
 
 public class GeneratedLicenseNotRequired implements IHeaderMatcher {
 
@@ -64,7 +66,7 @@ public class GeneratedLicenseNotRequired implements IHeaderMatcher {
         this.numberOfPatterns = linePatterns.length;
     }
 
-    public boolean match(String subject, String line, IClaimReporter reporter) throws RatHeaderAnalysisException {
+    public boolean match(IResource subject, String line, IClaimReporter reporter) throws RatHeaderAnalysisException {
         boolean result = false;
         for (int i=0;i<numberOfPatterns;i++) {
             if (linePatterns[i].matcher(line).matches()) {
@@ -76,9 +78,10 @@ public class GeneratedLicenseNotRequired implements IHeaderMatcher {
         return result;
     }
 
-    private void reportOnLicense(String subject, IClaimReporter reporter) throws RatHeaderAnalysisException {
+    private void reportOnLicense(IResource subject, IClaimReporter reporter) throws RatHeaderAnalysisException {
         try {
-            Claims.reportGeneratedClaims(subject, "Generated files do not required license headers", reporter);
+            reporter.claim(new LicenseHeaderClaim(subject, LicenseFamilyCode.GENERATED,
+                    "Generated files do not required license headers"));
         } catch (RatReportFailedException e) {
             throw new RatHeaderAnalysisException("Cannot write claims", e);
         }