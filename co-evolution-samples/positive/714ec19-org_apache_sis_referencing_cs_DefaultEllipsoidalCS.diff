diff --git a/core/sis-referencing/src/main/java/org/apache/sis/referencing/cs/DefaultEllipsoidalCS.java b/core/sis-referencing/src/main/java/org/apache/sis/referencing/cs/DefaultEllipsoidalCS.java
index 39c3c5070..7882d56f9 100644
--- a/core/sis-referencing/src/main/java/org/apache/sis/referencing/cs/DefaultEllipsoidalCS.java
+++ b/core/sis-referencing/src/main/java/org/apache/sis/referencing/cs/DefaultEllipsoidalCS.java
@@ -107,9 +107,9 @@ public class DefaultEllipsoidalCS extends AbstractCS implements EllipsoidalCS {
      *   </tr>
      * </table>
      *
-     * @param properties The properties to be given to the identified object.
-     * @param axis0 The first  axis (e.g. “Geodetic latitude”).
-     * @param axis1 The second axis (e.g. “Geodetic longitude”).
+     * @param  properties  the properties to be given to the identified object.
+     * @param  axis0       the first  axis (e.g. “Geodetic latitude”).
+     * @param  axis1       the second axis (e.g. “Geodetic longitude”).
      *
      * @see org.apache.sis.referencing.factory.GeodeticObjectFactory#createEllipsoidalCS(Map, CoordinateSystemAxis, CoordinateSystemAxis)
      */
@@ -126,10 +126,10 @@ public class DefaultEllipsoidalCS extends AbstractCS implements EllipsoidalCS {
      * The properties map is given unchanged to the
      * {@linkplain AbstractCS#AbstractCS(Map,CoordinateSystemAxis[]) super-class constructor}.
      *
-     * @param properties The properties to be given to the identified object.
-     * @param axis0 The first  axis (e.g. “Geodetic latitude”).
-     * @param axis1 The second axis (e.g. “Geodetic longitude”).
-     * @param axis2 The third  axis (e.g. “Ellipsoidal height”).
+     * @param  properties  the properties to be given to the identified object.
+     * @param  axis0       the first  axis (e.g. “Geodetic latitude”).
+     * @param  axis1       the second axis (e.g. “Geodetic longitude”).
+     * @param  axis2       the third  axis (e.g. “Ellipsoidal height”).
      *
      * @see org.apache.sis.referencing.factory.GeodeticObjectFactory#createEllipsoidalCS(Map, CoordinateSystemAxis, CoordinateSystemAxis, CoordinateSystemAxis)
      */
@@ -149,7 +149,7 @@ public class DefaultEllipsoidalCS extends AbstractCS implements EllipsoidalCS {
      *
      * <p>This constructor performs a shallow copy, i.e. the properties are not cloned.</p>
      *
-     * @param cs The coordinate system to copy.
+     * @param  cs  the coordinate system to copy.
      *
      * @see #castOrCopy(EllipsoidalCS)
      */
@@ -163,8 +163,8 @@ public class DefaultEllipsoidalCS extends AbstractCS implements EllipsoidalCS {
      * Otherwise if the given object is already a SIS implementation, then the given object is returned unchanged.
      * Otherwise a new SIS implementation is created and initialized to the attribute values of the given object.
      *
-     * @param  object The object to get as a SIS implementation, or {@code null} if none.
-     * @return A SIS implementation containing the values of the given object (may be the
+     * @param  object  the object to get as a SIS implementation, or {@code null} if none.
+     * @return a SIS implementation containing the values of the given object (may be the
      *         given object itself), or {@code null} if the argument was null.
      */
     public static DefaultEllipsoidalCS castOrCopy(final EllipsoidalCS object) {
@@ -198,7 +198,7 @@ public class DefaultEllipsoidalCS extends AbstractCS implements EllipsoidalCS {
     /**
      * Validates the set of axes after the validation of each individual axis.
      *
-     * @param properties The properties given at construction time.
+     * @param  properties  the properties given at construction time.
      */
     private void validateAxes(final Map<String,?> properties) {
         int i = super.getDimension();