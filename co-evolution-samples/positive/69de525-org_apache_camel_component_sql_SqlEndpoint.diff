diff --git a/components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlEndpoint.java b/components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlEndpoint.java
index 534c6d63fb5..61c87909e07 100644
--- a/components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlEndpoint.java
+++ b/components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlEndpoint.java
@@ -16,16 +16,11 @@
  */
 package org.apache.camel.component.sql;
 
-import java.util.Map;
-
-import javax.sql.DataSource;
-
 import org.apache.camel.Component;
 import org.apache.camel.Consumer;
 import org.apache.camel.Processor;
 import org.apache.camel.Producer;
 import org.apache.camel.impl.DefaultEndpoint;
-import org.apache.camel.util.IntrospectionSupport;
 import org.springframework.jdbc.core.JdbcTemplate;
 
 /**
@@ -37,15 +32,11 @@ public class SqlEndpoint extends DefaultEndpoint {
     private JdbcTemplate jdbcTemplate;
     private String query;
 
-    public SqlEndpoint(String uri, String query, Component component, DataSource dataSource, Map parameters) throws Exception {
-        super(uri, component);
-        this.jdbcTemplate = new JdbcTemplate(dataSource);
-        IntrospectionSupport.setProperties(jdbcTemplate, parameters, "template.");
-        this.query = query;
+    public SqlEndpoint() {
     }
 
-    public SqlEndpoint(String endpointUri, JdbcTemplate jdbcTemplate, String query) {
-        super(endpointUri);
+    public SqlEndpoint(String uri, Component component, JdbcTemplate jdbcTemplate, String query) {
+        super(uri, component);
         this.jdbcTemplate = jdbcTemplate;
         this.query = query;
     }
@@ -59,7 +50,27 @@ public class SqlEndpoint extends DefaultEndpoint {
     }
 
     public boolean isSingleton() {
-        return false;
+        return true;
+    }
+
+    public JdbcTemplate getJdbcTemplate() {
+        return jdbcTemplate;
+    }
+
+    public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
+        this.jdbcTemplate = jdbcTemplate;
+    }
+
+    public String getQuery() {
+        return query;
     }
 
+    public void setQuery(String query) {
+        this.query = query;
+    }
+
+    @Override
+    protected String createEndpointUri() {
+        return "sql:" + query;
+    }
 }