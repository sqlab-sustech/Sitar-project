diff --git a/core/src/main/java/org/apache/accumulo/core/data/Mutation.java b/core/src/main/java/org/apache/accumulo/core/data/Mutation.java
index 4b1a812ab..ed5120427 100644
--- a/core/src/main/java/org/apache/accumulo/core/data/Mutation.java
+++ b/core/src/main/java/org/apache/accumulo/core/data/Mutation.java
@@ -108,6 +108,19 @@ public class Mutation implements Writable {
     this(row, 0, row.length);
   }
 
+  /**
+   * Creates a new mutation. A defensive copy is made.
+   *
+   * @param row
+   *          row ID
+   * @param initialBufferSize
+   *          the initial size, in bytes, of the internal buffer for serializing
+   * @since 1.7.0
+   */
+  public Mutation(byte[] row, int initialBufferSize) {
+    this(row, 0, row.length, initialBufferSize);
+  }
+
   /**
    * Creates a new mutation. A defensive copy is made.
    *
@@ -122,9 +135,28 @@ public class Mutation implements Writable {
    * @since 1.5.0
    */
   public Mutation(byte[] row, int start, int length) {
+    this(row, start, length, 64);
+  }
+
+  /**
+   * Creates a new mutation. A defensive copy is made.
+   *
+   * @param row
+   *          byte array containing row ID
+   * @param start
+   *          starting index of row ID in byte array
+   * @param length
+   *          length of row ID in byte array
+   * @param initialBufferSize
+   *          the initial size, in bytes, of the internal buffer for serializing
+   * @throws IndexOutOfBoundsException
+   *           if start or length is invalid
+   * @since 1.7.0
+   */
+  public Mutation(byte[] row, int start, int length, int initialBufferSize) {
     this.row = new byte[length];
     System.arraycopy(row, start, this.row, 0, length);
-    buffer = new UnsynchronizedBuffer.Writer();
+    buffer = new UnsynchronizedBuffer.Writer(initialBufferSize);
   }
 
   /**
@@ -137,6 +169,19 @@ public class Mutation implements Writable {
     this(row.getBytes(), 0, row.getLength());
   }
 
+  /**
+   * Creates a new mutation. A defensive copy is made.
+   *
+   * @param row
+   *          row ID
+   * @param initialBufferSize
+   *          the initial size, in bytes, of the internal buffer for serializing
+   * @since 1.7.0
+   */
+  public Mutation(Text row, int initialBufferSize) {
+    this(row.getBytes(), 0, row.getLength(), initialBufferSize);
+  }
+
   /**
    * Creates a new mutation.
    *
@@ -147,6 +192,19 @@ public class Mutation implements Writable {
     this(new Text(row.toString()));
   }
 
+  /**
+   * Creates a new mutation.
+   *
+   * @param row
+   *          row ID
+   * @param initialBufferSize
+   *          the initial size, in bytes, of the internal buffer for serializing
+   * @since 1.7.0
+   */
+  public Mutation(CharSequence row, int initialBufferSize) {
+    this(new Text(row.toString()), initialBufferSize);
+  }
+
   /**
    * Creates a new mutation.
    */