diff --git a/runners/core-java/src/main/java/org/apache/beam/runners/core/SplittableParDo.java b/runners/core-java/src/main/java/org/apache/beam/runners/core/SplittableParDo.java
index 8a9bfcd205..f8d12ecb81 100644
--- a/runners/core-java/src/main/java/org/apache/beam/runners/core/SplittableParDo.java
+++ b/runners/core-java/src/main/java/org/apache/beam/runners/core/SplittableParDo.java
@@ -53,7 +53,6 @@ import org.apache.beam.sdk.util.TimeDomain;
 import org.apache.beam.sdk.util.Timer;
 import org.apache.beam.sdk.util.TimerInternals;
 import org.apache.beam.sdk.util.WindowedValue;
-import org.apache.beam.sdk.util.WindowingInternals;
 import org.apache.beam.sdk.util.WindowingStrategy;
 import org.apache.beam.sdk.util.state.State;
 import org.apache.beam.sdk.util.state.StateInternals;
@@ -105,7 +104,7 @@ public class SplittableParDo<InputT, OutputT, RestrictionT>
     checkNotNull(parDo, "parDo must not be null");
     this.parDo = parDo;
     checkArgument(
-        DoFnSignatures.getSignature(parDo.getNewFn().getClass()).processElement().isSplittable(),
+        DoFnSignatures.getSignature(parDo.getFn().getClass()).processElement().isSplittable(),
         "fn must be a splittable DoFn");
   }
 
@@ -115,7 +114,7 @@ public class SplittableParDo<InputT, OutputT, RestrictionT>
   }
 
   private PCollectionTuple applyTyped(PCollection<InputT> input) {
-    DoFn<InputT, OutputT> fn = parDo.getNewFn();
+    DoFn<InputT, OutputT> fn = parDo.getFn();
     Coder<RestrictionT> restrictionCoder =
         DoFnInvokers.invokerFor(fn)
             .invokeGetRestrictionCoder(input.getPipeline().getCoderRegistry());
@@ -684,12 +683,6 @@ public class SplittableParDo<InputT, OutputT, RestrictionT>
         throw new IllegalStateException("Unexpected extra context access on a splittable DoFn");
       }
 
-      @Override
-      public WindowingInternals<InputT, OutputT> windowingInternals() {
-        // DoFnSignatures should have verified that this DoFn doesn't access extra context.
-        throw new IllegalStateException("Unexpected extra context access on a splittable DoFn");
-      }
-
       @Override
       public TrackerT restrictionTracker() {
         return tracker;